/*  ---------------------
    MIXINS
    --------------------- */

/*  TYPOGRAPHY
    ------------------- */

@mixin set-font($font-family, $font-weight:regular){
    $font : map-get(map-get($fonts, $font-family), $font-weight);
    font-family: map-get($font, font-family);
    font-weight: map-get($font, font-weight);
}

@mixin font-awesome{
    font-family: 'FontAwesome';
    font-size: inherit;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

@mixin title-font{
    @include set-font(title);
    text-transform: uppercase;
    letter-spacing: 1px;
}

@mixin h1{
    @include title-font;
    font-size: 3rem;
    line-height: 1.25;
    margin: 0;
}

@mixin h2{
    @include title-font;
    font-size: 2rem;
    line-height: 1.25;
}

@mixin h3{
    @include title-font;
    font-size: 1.5rem;
    line-height: 1.25;
}

/*  BUTTONS
    ------------------- */

@mixin button-base{
    position: relative;
    display: block;
    width: 100%;
    padding: $button-padding;
    border-radius: $global-border-radius;
    cursor: pointer;

    @include set-font(body, bold);
    font-size: $global-font-size;
    line-height: 1.25rem;
    text-align: center;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 1px;

    &:hover, &:focus, &:active{
        outline: none;
    }
}

@mixin button-colour($theme:$button-light){
    color: map-get($theme, default-font-colour);
    background-color: map-get($theme, default-background-colour);
    border-color: map-get($theme, default-border-colour);

    &::before, &::after{
        background-color: map-get($theme, hover-background-colour);
    }

    &:hover, &:focus, &:active{
        color: map-get($theme, hover-font-colour);
        background-color: transparent;
        border-color: map-get($theme, hover-border-colour);
    }
}

/*  INPUTS
    ------------------- */

@mixin input-colour($theme:$input-light){
    color: map-get($theme, default-font-colour);
    background-color: map-get($theme, default-background-colour);
    border-color: map-get($theme, default-border-colour);

    &:hover, &:focus, &:active{
        color: map-get($theme, hover-font-colour);
        background-color: map-get($theme, hover-background-colour);
        border-color: map-get($theme, hover-border-colour);
    }

    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active{
        -webkit-text-fill-color: map-get($theme, default-font-colour) !important;
        transition: background-color 5000s ease-in-out 0s;
    }
}

@mixin submit-colour($theme:$submit-light){
    color: map-get($theme, default-font-colour);
    background-color: map-get($theme, default-background-colour);

    &::after{
        background-color: map-get($theme, default-background-shadow);
    }

    &:hover, &:focus, &:active{
        color: map-get($theme, hover-font-colour);
        background-color: map-get($theme, hover-background-colour);

        &::after{
            background-color: map-get($theme, hover-background-shadow);
        }
    }

    &:active{
        background-color: map-get($theme, active-background-colour);
    }
}

/*  LAYOUT
    ------------------- */

@mixin invisible{
    position: absolute;
    top: -625rem;
    left: -625rem;
    font-size: 0;
    visibility: hidden;
    width: 0 !important;
    height: 0 !important;
}

@mixin set-background-colour($bg-colour:$black){
    background-color: $bg-colour;
    color: set-colour($bg-colour);

    .button{
        @include button-colour(set-colour($bg-colour, $button-light, $button-dark));
    }
}

@mixin spacing($property-name, $position, $value){
    $spacing-value: map-get($sizes, $value);

    @if($spacing-value == null){
        $spacing-value: $value;
    }

    @if($position == all){
        #{$property-name}: $spacing-value;
    }
    @else{
        $positions: $position;
        @each $multiplePosition in $positions {
            $property: #{$property-name}-#{$multiplePosition};
            #{$property}: $spacing-value;
        }
    }
}

@mixin transition($properties){
    $transition: "";
    @each $property in $properties {
        $i: index($properties, $property);
        @if($i == 1){
            $transition: #{$property} #{$global-transition};
        }
        @else{
            $transition: #{$transition}, #{$property} #{$global-transition};
        }
    }
    transition: $transition;
}
